#+TITLE: 修正Facebook静态分析器Infer于无Homebrew之Mac

* 前面

显然，因为显而易见的许多理由，我不希望从源码开始构建Infer（一个静态分析工具）。但是当我们使用从Release中荡下来的二进制时，由于是基于Homebrew构建的，会出现以下报错：

#+BEGIN_SRC
dyld[23826]: Library not loaded: /opt/homebrew/opt/gmp/lib/libgmp.10.dylib
  Referenced from: <B33F0A38-F79B-31A8-A056-2225DACE56DC> /Users/rne/Downloads/infer-osx-arm64-v1.2.0/lib/infer/infer/bin/infer
  Reason: tried: '/opt/homebrew/opt/gmp/lib/libgmp.10.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/opt/homebrew/opt/gmp/lib/libgmp.10.dylib' (no such file), '/opt/homebrew/opt/gmp/lib/libgmp.10.dylib' (no such file)
#+END_SRC

于是我们修正它，并且就Homebrew展开讨论。

* 修正

首先使用~otool~检查：

#+BEGIN_SRC
infer-osx-arm64-v1.2.0 % otool -L bin/infer        
bin/infer:
	/opt/homebrew/opt/gmp/lib/libgmp.10.dylib (compatibility version 16.0.0, current version 16.0.0)
	/usr/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.12)
	/usr/lib/libsqlite3.dylib (compatibility version 9.0.0, current version 349.1.0)
	/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1336.0.0)
#+END_SRC

第一反应是用~patchelf~，但是随后发现似乎不能应用修改到Mach-O的二进制。搜索发现了~install_name_tool~，问题简单了，修改其~install_name~即可。

#+BEGIN_SRC shell
  sudo install_name_tool -change /opt/homebrew/opt/gmp/lib/libgmp.10.dylib /opt/local/lib/libgmp.10.dylib $(which infer)
#+END_SRC

随后根据更多的报错去修改各个组件，如~/lib/infer/facebook-clang-plugins/clang/install/[bin|lib]~下面的东西。

最终，只要你足够有耐心，你就会得到一个最终能够正常工作的Infer。

* 成果

#+CAPTION: 分析
#+ATTR_HTML: :width 85%
#+ATTR_HTML: :class img-center
#+ATTR_HTML: :loading lazy
[[../static/image/mac-infer-01.png]]

我还写了一个Emacs中FlyCheck的支持，大概像这样：

#+BEGIN_SRC elisp
  (use-package flycheck
    :defer t
    :config (flycheck-define-checker c/c++-infer
              "A C/C++ syntax checker using Facebook infer."
              :command ("infer" "run" "--no-progress-bar" "--"
                        (eval (pcase major-mode
                                ((or `c++-mode `c++-ts-mode) "clang++")
                                ((or `c-mode `c-ts-mode) "clang")))
                        "-c" source
                        "-iquote" (eval (flycheck-c/c++-quoted-include-directory)))
              :error-patterns ((error line-start (file-name) ":" line ": error: " (message) line-end))
              :modes (c-mode c++-mode c-ts-mode c++-ts-mode))
    :custom (flycheck-checkers '(c/c++-infer emacs-lisp opam)))
#+END_SRC

* Mac上包管理器现状

不知到从什么时候开始，Homebrew开始成为了MacOS上包管理器defacto的标准，而每一个日常操作都可能会因为你没有使用Homebrew而出现问题，比如之前使用opam安装Coq依赖之一的~gmp-ocaml~时因为只寻找Homebrew路径而无法完成编译。

解决方法是使用~pkg-config~查询对应路径，再注入~$CPATH~环境变量。我实在是无法想像opam这样的包管理器会仅仅考虑Homebrew的情况，而甚至都不尝试从~pkg-config~查询。

再比如你需要从源码构建软件，很多宣称支持Mac的软件会在安装脚本中写死用Homebrew安装软件的逻辑。

我个人认为这是一种极其不健康的软件生态，但是我很怀疑这种现状能否有改善。
